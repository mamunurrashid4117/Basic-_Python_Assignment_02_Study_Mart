# -*- coding: utf-8 -*-
"""Assignment_02.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1AICX93nHSvYsY1Ai-MnkIuJzVfvq0WSo

### **Assignment 02**

**60 days of Python**

**Day 01**
"""

#Day 01

print("Data Science")

"""**Day 02**"""

#Day 02

print("Hello, world!")

print("Hello, world!","Welcome to my assignment",sep=" & ",end="|")

var="Mamun"
var

print("Var")

print("My name is ",var)

id(var)

import sys
sys.getsizeof(var)

x=100

x

y=100

y

id(x)

id(y)

x=1000

y=1000

id(x)

id(y)

x,y,z=10,20,30

x,y,z

Varsity_Id=1910824164

Varsity_Id

#Global and Local Variable

x=10 #global
def func():
  print("My result is ",x)
func()

x=10 #global
def func():
  x=500 #Local
  print("My result is ",x)
func()

def func():
  global x
  x=502
  print("My age is ",x)
func()

"""**Day 03**"""

#Day 03

data="data science fun"

data

type(data)

data=input()

data

age=input()

age

type(age)

x=input()
y=input()

x+y

x=int(x)
y=int(y)

x

y

x+y

x=int(input("Type an integer NUmber:"))

x

y=float(input("Type a float Number:"))

y

x+y

name="Mamun Ur Rashid"

len(name)

name.count("Mamun")

"""Python String Method"""

data="60 days of python"

data.find("of")

data.find("f")

data.find("y",6,10)

data.index("y")

data.index("y",5,12)

data

data.lower

data.lower() #Convert all data in lower

data.upper() #Convert all data in upper

data.casefold()  #Convert all data in lower

data.capitalize() #Only 1st letter is upper case

data.swapcase()

data.isupper()

data.islower()

data.upper()

data.lower()

data.isdigit()

data.encode()

type(data.encode)

data

data.split()

data.split()[1]

data.center(110)

data.center(50)

data.replace("python","java")

#format function
x=100
y=155
z=x+y
print("I have {} taka. I have to buy a new book with this {} taka. I have to also buy a guiter. But I cant afford it. Because I have only {} taka".format(z,x,y))

"""**All about data types in Python**"""

x=10
y=10.5
z=10+5j

type(z)

type(x)

type(y)

isinstance(z,complex)

isinstance(x,float)

isinstance(y,int)

x=float(x)

x

type(x)

a=complex(x)

a

b=int(y)

b

c=complex(b)

c

number=complex(input("Enter a complex Number:"))

number

"""**Boolian**"""

x=True

x

True

"""**Sequence Data**"""

#List []
l=[1,2,3,105,10.66,True]

l

l[0]

l[5]

type(l)

isinstance(l,list)

#Tuple ()
t=(1,2,5,6,5,True)
print(t)
type(t)

t[0]

#Range
r=range(10)

for i in r:
  print(i)

s=range(5,50)

for i in s:
  print(i)

e=range(15,30,3)

for i in e:
  print(i)

f=range(50,10,-5)

for i in f:
  print(i)

# Array
import array as ar

n=ar.array("i",[1,2,3,4])

n

#String
a="data"
print(a)
type(a)

#Set
a={1,2,3}
print(a)
type(a)

#Dictionary
dic={
    "var":"RU",
    "DEP":"STAT"
}

print(dic)

dic.keys()

dic.values()

#Data Frame (Pandas)
import pandas as pd
ds=pd.read_csv("Daily Cost.csv")

ds.head()

ds.shape

ds.info()

#Binary Type
b=bytearray("ABCDEF","utf-8")
print(b)
type(b)

memoryview(b)

memoryview(b)[4]

mv=memoryview(b)
mv[0]=97

b

"""**Operators**"""

x=10
y=50

x+y

x-y

x*y

x/y

x**y

x/y

x/y

x//y

import math
math.floor(x/y)

math.ceil(x/y)

#Identity Operator
x=10
y=10
x is y

x=12
y=15
x is y

x=y

x

y

x==y

x=1000000
y=x
z=1000000

x is y

x is z

id(x)

id(y)

id(z)

x==z

x is not z

#Membership Operator
list1=[1,2,3,4,5,6,7,8,9]

11 in list1

12 not in list1

d="Learn Data"
"Data" in d

# Bitwise Operator
x=10
y=5
x | y

x & y

# Comparison Operator
10==10

10>=10

10<4 or 5>3

10>5 and 5>3

10<5 and 5>6

x=10
x+=4

x

"""**Day - 07**

If Else Statement
"""

x=5
y=7
if x>y:
  print("X is greater than Y")
else:
  print("X is less than Y")

x=5
y=7
if x>y:
  print("X is greater than Y")
elif x<y:
  print("X is less than Y")
  print("Data Science")
  if x != y:
    print("Not Equal")

num=int(input("Enter a Number"))
if num % 2==0:
  if num % 5==0:
    print(num,"Divisible by 5")
  else:
    print("No 1")
else:
  print("No 2")

from IPython.display import Image
Image("pic.png")

amount=0
net_unit=float(input("Enter an unit: "))
if net_unit <= 100:
  amount=0
  print("Amount is ",amount)
elif net_unit >100 and net_unit<=200:
  amount=(net_unit-100)*5
  print("Amount is ",amount)
elif net_unit>200:
  amount=((net_unit-200)*10)+500
  print("Amount is: ",amount)

"""**Assignment 01 (Youtube)**

Problem - 01
"""

len=float(input("Enter the length: "))
wed=float(input("Enter the weidth: "))
if len==wed:
  print("Its a square")
else:
  print("It's a rectangle")

"""Problem - 02"""

a=int(input("Enter a value: "))
b=int(input("Enter a value: "))
c=int(input("Enter a value: "))
if a>b and b>c:
  print("The greatest value is ",a)
elif b>a and b>c:
  print("The greatest value is ",b)
else:
  print("The greatest value is ",c)

"""Problem - 03"""

att=float(input("Enter your attendence: "))
if att<75:
  print("Sorry! You can not seat for exam!")
else:
  print("Congrats! You can seat for exam.")

"""Problem - 04"""

mark=int(input("Enter your mark here: "))
if mark<25:
  print("F")
elif 25<= mark <44:
  print("E")
elif 45<= mark <49:
  print("D")
elif 50<= mark <59:
  print("C")
elif 60<= mark <79:
  print("B")
elif 80<= mark <89:
  print("A")
elif mark>=90:
  print("A+")

"""Day - 09"""

data="python"

data

data[1]

data[-1]

for x in data:
  print(x)

range(10)

for x in range(len(data)):
  print(data[x])

for x in range(6):
  print(data[x])

data="i love data science so much"
for x in range(15)):
  print(data[x])

data=data.split

data

n=[1,2,5,8,9,5,63,6,65,5,65]
total=0
for x in n:
  total=total+x
  print(total,x)

for i in range(5,10,3):
  print("data science",i)

"""Exercise - 01"""

for i in range(-100,-9):
  print(i)

sum=0
for i in range(10,1001):
  if i%2==0:
    sum=sum+i
    print(i)

n=int(input("Enter a number:"))
num=1
for i in range(n,0,-1):
  num=i*num
  print(num)

for i in range(25996666,0)
print(i)

"""Day - 10

While Loop
"""

i=1
while (i<=10):
  print(i)
  i=i+1

i=1
while (i<=10):
  print("Mamun",i)
  i=i+2

"""Day - 11

Nested Loop
"""

rows=4
for x in range(1,rows+1):
  for y in range(1,x+1):
    print("#",end="   ")
  print("  ")

num=[1,2,3,4]
for ele in num:
  index=0
  while index<len(num):
    print(num[index],end=" ")
    index=index+1
  print("\n")

